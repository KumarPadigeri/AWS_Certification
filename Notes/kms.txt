AWS KMS

## THEORY ##

- A managed service that helps you create and control Encryption Keys used to encrypt & decrypt the data.
- AWS KMS is integrated with other AWS services including, EBS, S3, Amazon Redshift, Amazon Elastic Transcoder, Amazon Workmail etc.
- Encryption Keys are regional.[Important bruh] Users Groups etc can be global.

Customer Master Key

CMK Anatomy
  alias
  creation date
  description
  key state
  key material(either customer provided or AWS provided)
- You can use a CMK to encrypt and decrypt up to 4 KB (4096 bytes) of data. 
- Can never be exported.
- You can use a CMK to encrypt and decrypt up to 4 KB (4096 bytes) of data. 
- Typically, you use CMKs to generate, encrypt, and decrypt the data keys that you use outside of AWS KMS to encrypt your data.
  This strategy is known as envelope encryption explained below.
- CMKs are created in AWS KMS and never leave AWS KMS unencrypted. 
- To use or manage your CMK, you access them through AWS KMS.   

There are 3 types of CMKs
1. AWS Managed CMK
AWS managed CMKs are CMKs in your account that are created, managed, and used on your behalf by an AWS service that integrates with AWS KMS.
You can identify AWS managed CMKs by their aliases, which have the format aws/service-name, such as aws/redshift.
You can't change the policies and can't use it. The services use it on your behalf.
2. Customer Managed CMK
3. AWS owned CMKs
  AWS owned CMKs are not in your AWS account. They are part of a collection of CMKs that AWS owns and manages for use in multiple AWS accounts. AWS services can use AWS owned CMKs to protect your data.

You cannot view, manage, or use AWS owned CMKs, or audit their use. You are not charged bruh.

Code to be used in aws cli
aws kms encrypt --key-id YOURKEYIDHERE --plaintext fileb://secret.txt --output text --query CiphertextBlob | base64 --decode > encryptedsecret.txt
aws kms decrypt --ciphertext-blob fileb://encryptedsecret.txt --output text --query Plaintext | base64 --decode > decryptedsecret.txt
aws kms re-encrypt --destination-key-id YOURKEYIDHERE --ciphertext-blob fileb://encryptedsecret.txt | base64 > newencryption.txt
aws kms enable-key-rotation --key-id YOURKEYIDHERE

Granting Permissions
1. Key Policies: When you create a CMK, you determine who can use and manage that CMK. These permissions are contained in a document called the key policy.
2. Grant: You can use grants to give long-term access that allows AWS principals to use your customer managed CMKs.
3. Grant Tokens:  You can use grants to give long-term access that allows AWS principals to use your customer managed CMKs.


KMS Envelope Encryption
Envelope encryption is the practice of encrypting plaintext data with a data key, and then encrypting the data key under another key.

- For Deleting the key you first have to disable it. An it is usually deleted in minimum of 1 week.
- Data keys are encryption keys that you can use to encrypt data, including large amounts of data and other data encryption keys.
- AWS KMS also throttles the requests if you exceed 5500 request per seconds.

Encryption Context
All AWS KMS cryptographic operations (the Encrypt, Decrypt, ReEncrypt, GenerateDataKey, and GenerateDataKeyWithoutPlaintext) accept an encryption context, an optional set of keyâ€“value pairs that can contain additional contextual information about the data. 
AWS KMS uses the encryption context as additional authenticated data (AAD) to support authenticated encryption.
They are public and can be accessed in cloudtrail log.

## QUESTIONS ##
<Add Questions Here>





